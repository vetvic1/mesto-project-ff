{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/components/cards.js","webpack:///./src/components/card.js","webpack:///./src/components/modal.js","webpack:///./src/components/validation.js","webpack:///./src/components/index.js"],"sourcesContent":["const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];\r\nexport {initialCards};","const cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\n// Функция создания карточки\r\nfunction createCard(card, deleteFunction, likeFunction, popupFunction) {\r\n  // Клонируем шаблон\r\n  const newCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = newCard.querySelector('.card__image');\r\n  \r\n  // Устанавливаем значения\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n  newCard.querySelector('.card__title').textContent = card.name;\r\n  \r\n  // Добавляем обработчик клика для кнопки удаления\r\n  newCard.querySelector('.card__delete-button').addEventListener('click', deleteFunction);\r\n  \r\n  // Добавляем обработчик клика для кнопки лайка\r\n  newCard.querySelector('.card__like-button').addEventListener('click', likeFunction);\r\n  \r\n  // Добавляем обработчик клика для кнопки просмотра изображения\r\n  cardImage.addEventListener('click', popupFunction);\r\n  \r\n  return newCard;\r\n}\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = function (event) {\r\n  event.target.closest('.card').remove();\r\n};\r\n\r\n// Функция лайка карточки\r\nconst likeCard = function (event) {\r\n  event.target.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\nexport { createCard, deleteCard, likeCard };\r\n","function openModal(target) {\r\n    target.classList.add('popup_is-opened');\r\n    addEscapeListener();\r\n}\r\n\r\nfunction closeModal(target) {\r\n    target.classList.remove('popup_is-opened');\r\n    removeEscapeListener();\r\n}\r\n\r\nfunction addEscapeListener() {\r\n    document.addEventListener('keydown', escapeListener);\r\n}\r\n\r\nfunction removeEscapeListener() {\r\n    document.removeEventListener('keydown', escapeListener);\r\n}\r\n\r\nfunction escapeListener(evt) {\r\n    if (evt.key === 'Escape') {\r\n        closeModal(document.querySelector('.popup_is-opened'));\r\n    }\r\n}\r\n\r\nexport {closeModal, openModal};\r\n","const validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'form__input-error',\r\n    errorClass: 'popup__error_visible'\r\n};\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n  };\r\n  \r\n  const hideInputError = (formElement, inputElement, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = '';\r\n  };\r\n  \r\n  const checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n    if (!inputElement.validity.valid) {\r\n      showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n    } else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n    }\r\n  };\r\n  \r\n  const setEventListeners = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', function () {\r\n        checkInputValidity(formElement, inputElement, validationConfig);\r\n        toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n    });\r\n  };\r\n  \r\n  const enableValidation = (validationConfig) => {\r\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  \r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener('submit', (evt) => {\r\n      evt.preventDefault();\r\n    });\r\n  \r\n      setEventListeners(formElement);\r\n    });\r\n  };\r\n  \r\n  export {enableValidation};","import {initialCards} from \"./cards.js\";\r\nimport {createCard, deleteCard, likeCard} from \"./card.js\";\r\nimport {closeModal, openModal} from \"./modal.js\";\r\nimport {enableValidation} from \"./validation.js\";\r\nimport {} from \"./api.js\";\r\n\r\nenableValidation(validationConfig);\r\nconst placesList = document.querySelector(\".places__list\");\r\n\r\n// Выводим карточки на страницу\r\ninitialCards.forEach((cardData) => {\r\n  const cardElement = createCard(cardData, deleteCard, likeCard, openImagePopup);\r\n  placesList.append(cardElement);\r\n});\r\n\r\nconst popups = document.querySelectorAll('.popup')\r\n\r\npopups.forEach((popup) => {\r\n    popup.addEventListener('mousedown', (evt) => {\r\n        if (evt.target.classList.contains('popup_is-opened')) {\r\n            closeModal(popup)\r\n        }\r\n        if (evt.target.classList.contains('popup__close')) {\r\n            closeModal(popup)\r\n        }\r\n    })\r\n});\r\n\r\n\r\n// Редактирование профиля\r\nconst profileForm = document.forms['edit-profile'];\r\nconst nameInput = profileForm.elements['name'];\r\nconst jobInput = profileForm.elements['description'];\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileCloseButton = document.querySelector('.profile__edit-button');\r\nconst popupEditProfile = document.querySelector('.popup_type_edit');\r\n\r\nprofileCloseButton.addEventListener('click', () => {\r\n    fillEditProfilePopup();\r\n    openModal(popupEditProfile);\r\n});\r\n\r\nprofileForm.addEventListener('submit', handleProfileFormSubmit);\r\n\r\nfunction fillEditProfilePopup() {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n}\r\n\r\nfunction handleProfileFormSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    profileTitle.textContent = nameInput.value;\r\n    profileDescription.textContent = jobInput.value;\r\n    closeModal(popupEditProfile);\r\n}\r\n\r\n// Добавление новой карточки\r\nconst formAddNewCard = document.forms['new-place'];\r\nconst inputNewCardName = formAddNewCard.elements['place-name'];\r\nconst inputNewCardUrl = formAddNewCard.elements['link'];\r\nconst buttonAddNewCard = document.querySelector('.profile__add-button');\r\nconst popupAddNewCard = document.querySelector('.popup_type_new-card');\r\n\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  openModal(popupAddNewCard);\r\n});\r\n\r\nformAddNewCard.addEventListener('submit', submitAddNewCard);\r\n\r\nfunction submitAddNewCard(evt) {\r\n    evt.preventDefault();\r\n\r\n    const card = {\r\n        name: inputNewCardName.value,\r\n        link: inputNewCardUrl.value\r\n    }\r\n    renderCard(placesList, createCard(card, deleteCard, likeCard, openImagePopup));\r\n    formAddNewCard.reset();\r\n    closeModal(popupAddNewCard);\r\n}\r\n\r\n\r\nfunction renderCard(parent, newElement) { \r\n    const firstChild = parent.firstChild; \r\n    if (firstChild) { \r\n        parent.insertBefore(newElement, firstChild); \r\n    } else { \r\n        parent.append(newElement); \r\n    } \r\n} \r\n\r\n//Отображение полноэкранной картинки\r\nconst popupCardImage = document.querySelector('.popup__image');\r\nconst popupCardCaption = document.querySelector('.popup__caption');\r\nconst popupCardWindow = document.querySelector('.popup_type_image');\r\n\r\nfunction openImagePopup(event) {\r\n    const target = event.target;\r\n    \r\n    fillCardImagePopup(target);\r\n    openModal(popupCardWindow);\r\n}\r\n\r\nfunction fillCardImagePopup(target) {\r\n    popupCardImage['src'] = target['src'];\r\n    popupCardImage['alt'] = target['alt'];\r\n    popupCardCaption.textContent = target.closest('.card').querySelector('.card__title').textContent;\r\n}"],"names":["cardTemplate","document","querySelector","content","createCard","card","deleteFunction","likeFunction","popupFunction","newCard","cloneNode","cardImage","src","link","alt","name","textContent","addEventListener","deleteCard","event","target","closest","remove","likeCard","classList","toggle","openModal","add","escapeListener","closeModal","removeEventListener","evt","key","validationConfig","Array","from","querySelectorAll","formSelector","forEach","formElement","preventDefault","inputList","inputSelector","buttonElement","submitButtonSelector","inputElement","validity","valid","errorElement","concat","id","inputErrorClass","errorClass","hideInputError","errorMessage","showInputError","validationMessage","checkInputValidity","toggleButtonState","setEventListeners","enableValidation","placesList","cardData","cardElement","openImagePopup","append","popup","contains","profileForm","forms","nameInput","elements","jobInput","profileTitle","profileDescription","profileCloseButton","popupEditProfile","value","formAddNewCard","inputNewCardName","inputNewCardUrl","buttonAddNewCard","popupAddNewCard","parent","newElement","firstChild","insertBefore","reset","popupCardImage","popupCardCaption","popupCardWindow"],"sourceRoot":""}