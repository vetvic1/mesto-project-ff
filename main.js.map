{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/components/cards.js","webpack:///./src/components/card.js","webpack:///./src/components/modal.js","webpack:///./src/components/validation.js","webpack:///./src/components/config/validationConfig.js","webpack:///./src/components/index.js"],"sourcesContent":["const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];\r\nexport {initialCards};","const cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\n// Функция создания карточки\r\nfunction createCard(card, deleteFunction, likeFunction, popupFunction) {\r\n  // Клонируем шаблон\r\n  const newCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = newCard.querySelector('.card__image');\r\n  \r\n  // Устанавливаем значения\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n  newCard.querySelector('.card__title').textContent = card.name;\r\n  \r\n  // Добавляем обработчик клика для кнопки удаления\r\n  newCard.querySelector('.card__delete-button').addEventListener('click', deleteFunction);\r\n  \r\n  // Добавляем обработчик клика для кнопки лайка\r\n  newCard.querySelector('.card__like-button').addEventListener('click', likeFunction);\r\n  \r\n  // Добавляем обработчик клика для кнопки просмотра изображения\r\n  cardImage.addEventListener('click', popupFunction);\r\n  \r\n  return newCard;\r\n}\r\n\r\n// Функция удаления карточки\r\nconst deleteCard = function (event) {\r\n  event.target.closest('.card').remove();\r\n};\r\n\r\n// Функция лайка карточки\r\nconst likeCard = function (event) {\r\n  event.target.classList.toggle('card__like-button_is-active');\r\n};\r\n\r\nexport { createCard, deleteCard, likeCard };\r\n","function openModal(target) {\r\n    target.classList.add('popup_is-opened');\r\n    addEscapeListener();\r\n}\r\n\r\nfunction closeModal(target) {\r\n    target.classList.remove('popup_is-opened');\r\n    removeEscapeListener();\r\n}\r\n\r\nfunction addEscapeListener() {\r\n    document.addEventListener('keydown', escapeListener);\r\n}\r\n\r\nfunction removeEscapeListener() {\r\n    document.removeEventListener('keydown', escapeListener);\r\n}\r\n\r\nfunction escapeListener(evt) {\r\n    if (evt.key === 'Escape') {\r\n        closeModal(document.querySelector('.popup_is-opened'));\r\n    }\r\n}\r\n\r\nexport {closeModal, openModal};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n  };\r\n  \r\n  const hideInputError = (formElement, inputElement, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    inputElement.setCustomValidity(\"\");\r\n    errorElement.textContent = '';\r\n  };\r\n  \r\n  const isValid = (formElement, inputElement, validationConfig) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n      inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } \r\n    else {\r\n      inputElement.setCustomValidity(\"\");\r\n    }\r\n\r\n    if (!inputElement.validity.valid) {\r\n      showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n    } \r\n    else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n    }\r\n  };\r\n  \r\n  const setEventListeners = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        isValid(formElement, inputElement, validationConfig);\r\n        toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n    });\r\n  };\r\n  \r\n  function enableValidation(validationConfig) {\r\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n    formList.forEach((formElement) => {\r\n      setEventListeners(formElement, validationConfig);\r\n    });\r\n  };\r\n\r\n  function clearValidation(formElement, validationConfig) {\r\n    const inputs = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputs.forEach(input => hideInputError(formElement, input, validationConfig));\r\n    toggleButtonState(inputs, buttonElement, validationConfig);\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n    return inputList.some(inputElement => !inputElement.validity.valid);\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    }\r\n}\r\n  \r\n  export {enableValidation, clearValidation};","const validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n};\r\n\r\nexport default validationConfig;","import {initialCards} from \"./cards.js\";\r\nimport {createCard, deleteCard, likeCard} from \"./card.js\";\r\nimport {closeModal, openModal} from \"./modal.js\";\r\nimport {enableValidation, clearValidation} from \"./validation.js\";\r\nimport validationConfig from \"./config/validationConfig\";\r\nimport {} from \"./api.js\";\r\n\r\nenableValidation(validationConfig);\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\n\r\n// Выводим карточки на страницу\r\ninitialCards.forEach((cardData) => {\r\n  const cardElement = createCard(cardData, deleteCard, likeCard, openImagePopup);\r\n  placesList.append(cardElement);\r\n});\r\n\r\nconst popups = document.querySelectorAll('.popup')\r\n\r\npopups.forEach((popup) => {\r\n    popup.addEventListener('mousedown', (evt) => {\r\n        if (evt.target.classList.contains('popup_is-opened')) {\r\n            closeModal(popup)\r\n        }\r\n        if (evt.target.classList.contains('popup__close')) {\r\n            closeModal(popup)\r\n        }\r\n    })\r\n});\r\n\r\n\r\n// Редактирование профиля\r\nconst profileForm = document.forms['edit-profile'];\r\nconst nameInput = profileForm.elements['name'];\r\nconst jobInput = profileForm.elements['description'];\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileCloseButton = document.querySelector('.profile__edit-button');\r\nconst popupEditProfile = document.querySelector('.popup_type_edit');\r\n\r\nprofileCloseButton.addEventListener('click', () => {\r\n    fillEditProfilePopup();\r\n    openModal(popupEditProfile);\r\n    clearValidation(profileForm, validationConfig);\r\n});\r\n\r\nfunction fillEditProfilePopup() {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n}\r\n\r\nprofileForm.addEventListener('submit', (evt) => handleProfileFormSubmit(evt, nameInput.value, jobInput.value));\r\n\r\nfunction handleProfileFormSubmit(evt, name, description) {\r\n    evt.preventDefault();\r\n    evt.submitter.textContent = 'Сохранение...';\r\n    updateProfile(name, description)\r\n    .then((data) => {\r\n        renderProfile(data);\r\n        closeModal(popupEditProfile);\r\n    })\r\n    .catch(error => console.log(error))\r\n    .finally(() => {\r\n        evt.submitter.textContent = 'Сохранить';\r\n    });    \r\n}\r\n\r\nfunction renderProfile(res) {\r\n    profileTitle.textContent = res.name;\r\n    profileDescription.textContent = res.about.replace(/[^а-яА-ЯёЁa-zA-Z \\-]+/g, '');\r\n    //profileImage.style.backgroundImage = `url(${res.avatar})`;\r\n}\r\n\r\n// Добавление новой карточки\r\nconst formAddNewCard = document.forms['new-place'];\r\nconst inputNewCardName = formAddNewCard.elements['place-name'];\r\nconst inputNewCardUrl = formAddNewCard.elements['link'];\r\nconst buttonAddNewCard = document.querySelector('.profile__add-button');\r\nconst popupAddNewCard = document.querySelector('.popup_type_new-card');\r\n\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  formAddNewCard.reset();\r\n  clearValidation(formAddNewCard, validationConfig);\r\n  openModal(popupAddNewCard);\r\n});\r\n\r\nformAddNewCard.addEventListener('submit', submitAddNewCard);\r\n\r\nfunction submitAddNewCard(evt) {\r\n    evt.preventDefault();\r\n\r\n    const card = {\r\n        name: inputNewCardName.value,\r\n        link: inputNewCardUrl.value\r\n    }\r\n    renderCard(placesList, createCard(card, deleteCard, likeCard, openImagePopup));\r\n    formAddNewCard.reset();\r\n    closeModal(popupAddNewCard);\r\n}\r\n\r\n\r\nfunction renderCard(parent, newElement) { \r\n    const firstChild = parent.firstChild; \r\n    if (firstChild) { \r\n        parent.insertBefore(newElement, firstChild); \r\n    } else { \r\n        parent.append(newElement); \r\n    } \r\n} \r\n\r\n//Отображение полноэкранной картинки\r\nconst popupCardImage = document.querySelector('.popup__image');\r\nconst popupCardCaption = document.querySelector('.popup__caption');\r\nconst popupCardWindow = document.querySelector('.popup_type_image');\r\n\r\nfunction openImagePopup(event) {\r\n    const target = event.target;\r\n    \r\n    fillCardImagePopup(target);\r\n    openModal(popupCardWindow);\r\n}\r\n\r\nfunction fillCardImagePopup(target) {\r\n    popupCardImage['src'] = target['src'];\r\n    popupCardImage['alt'] = target['alt'];\r\n    popupCardCaption.textContent = target.closest('.card').querySelector('.card__title').textContent;\r\n}"],"names":["cardTemplate","document","querySelector","content","createCard","card","deleteFunction","likeFunction","popupFunction","newCard","cloneNode","cardImage","src","link","alt","name","textContent","addEventListener","deleteCard","event","target","closest","remove","likeCard","classList","toggle","openModal","add","escapeListener","closeModal","removeEventListener","evt","key","hideInputError","formElement","inputElement","validationConfig","errorElement","concat","id","inputErrorClass","errorClass","setCustomValidity","clearValidation","inputs","Array","from","querySelectorAll","inputSelector","buttonElement","submitButtonSelector","forEach","input","toggleButtonState","inputList","some","validity","valid","hasInvalidInput","inactiveButtonClass","formSelector","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","placesList","cardData","cardElement","openImagePopup","append","popup","contains","profileForm","forms","nameInput","elements","jobInput","profileTitle","profileDescription","profileCloseButton","popupEditProfile","value","description","preventDefault","submitter","updateProfile","then","data","res","about","replace","catch","error","console","log","finally","handleProfileFormSubmit","formAddNewCard","inputNewCardName","inputNewCardUrl","buttonAddNewCard","popupAddNewCard","reset","parent","newElement","firstChild","insertBefore","popupCardImage","popupCardCaption","popupCardWindow"],"sourceRoot":""}