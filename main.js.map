{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./src/components/api.js","webpack:///./src/components/card.js","webpack:///./src/components/modal.js","webpack:///./src/components/validation.js","webpack:///./src/components/config/validationConfig.js","webpack:///./src/components/index.js"],"sourcesContent":["const config = {\r\n  baseUrl: 'https://nomoreparties.co/v1/wff-cohort-12',\r\n  headers: {\r\n    authorization: '3e7f1ddd-d9bd-4f89-89f9-39ccd7f0243e',\r\n    'Content-Type': 'application/json'\r\n  }\r\n}\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }  \r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nconst getInitialCards = () => {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n      headers: config.headers\r\n    })\r\n      .then(handleResponse)\r\n  }; \r\n\r\nconst getUserProfile = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n}; \r\n\r\nconst updateProfile = (name, description) => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: 'PATCH',\r\n    body: {name: name, about: description},\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\nconst updateAvatar = (avatar) => {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    body: {avatar: avatar},\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\nconst uploadCard = (card) => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    method: 'POST',\r\n    body: card,\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\n\r\nconst deleteLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n} \r\n\r\nconst addLike = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: 'PUT',\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse);\r\n} \r\n\r\nconst deleteCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: 'DELETE',\r\n    headers: config.headers\r\n  })\r\n    .then(handleResponse)\r\n};\r\n\r\nexport {getInitialCards, getUserProfile, updateProfile, updateAvatar, uploadCard, deleteLike, addLike, deleteCard}","import {deleteCard, deleteLike, addLike} from \"./api.js\";\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content;\r\n\r\n\r\n// Функция создания карточки\r\nfunction createCard(card, ownerId, deleteFunction, likeFunction, popupFunction) {\r\n  // Клонируем шаблон\r\n  const newCard = cardTemplate.querySelector('.card').cloneNode(true);\r\n  const cardImage = newCard.querySelector('.card__image');\r\n  const cardId = card._id;\r\n  \r\n  // Устанавливаем значения\r\n  cardImage.src = card.link;\r\n  cardImage.alt = card.name;\r\n  newCard.querySelector('.card__title').textContent = card.name;\r\n  \r\n  // Добавляем обработчик клика для кнопки удаления\r\n  const buttonDelete = newCard.querySelector('.card__delete-button');\r\n    if (card.owner._id !== ownerId) {\r\n        buttonDelete.remove();\r\n    } else {\r\n        buttonDelete.addEventListener('click', () => deleteFunction(newCard, cardId));\r\n    }\r\n  \r\n  // Добавляем обработчик клика для кнопки лайка\r\n  const likeButton = newCard.querySelector('.card__like-button');\r\n    likeButton.addEventListener('click', (event) => likeFunction(event, cardId));\r\n    const likesCounter = newCard.querySelector('.card__like-counter');\r\n    likesCounter.textContent = card.likes.length === 0 ? '' : card.likes.length;\r\n    if (card.likes.some(like => like._id === ownerId)) {\r\n        likeButton.classList.add('card__like-button_is-active');\r\n    }\r\n  \r\n  // Добавляем обработчик клика для кнопки просмотра изображения\r\n  cardImage.addEventListener('click', popupFunction);\r\n  \r\n  return newCard;\r\n}\r\n\r\n// Функция лайка карточки\r\nconst likeCard = function (event, cardId) {\r\n  const likeButton = event.target;\r\n  const card = likeButton.closest('.card');\r\n  const likes = card.querySelector('.card__like-counter');\r\n\r\n    if (likeButton.classList.contains('card__like-button_is-active')) {\r\n        deleteLike(cardId)\r\n            .then(data => {\r\n                likeButton.classList.toggle('card__like-button_is-active');\r\n                likes.textContent = data.likes.length === 0 ? '' : data.likes.length;\r\n            })\r\n            .catch(error => console.log(error));\r\n    } else {\r\n        addLike(cardId)\r\n            .then(data => {\r\n                likeButton.classList.toggle('card__like-button_is-active');\r\n                likes.textContent = data.likes.length === 0 ? '' : data.likes.length;\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n};\r\n\r\nexport {createCard, likeCard};\r\n","function openModal(target) {\r\n    target.classList.add('popup_is-opened');\r\n    addEscapeListener();\r\n}\r\n\r\nfunction closeModal(target) {\r\n    target.classList.remove('popup_is-opened');\r\n    removeEscapeListener();\r\n}\r\n\r\nfunction addEscapeListener() {\r\n    document.addEventListener('keydown', escapeListener);\r\n}\r\n\r\nfunction removeEscapeListener() {\r\n    document.removeEventListener('keydown', escapeListener);\r\n}\r\n\r\nfunction escapeListener(evt) {\r\n    if (evt.key === 'Escape') {\r\n        closeModal(document.querySelector('.popup_is-opened'));\r\n    }\r\n}\r\n\r\nexport {closeModal, openModal};\r\n","const showInputError = (formElement, inputElement, errorMessage, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n  };\r\n  \r\n  const hideInputError = (formElement, inputElement, validationConfig) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    inputElement.setCustomValidity(\"\");\r\n    errorElement.textContent = '';\r\n  };\r\n  \r\n  const isValid = (formElement, inputElement, validationConfig) => {\r\n    if (inputElement.validity.patternMismatch) {\r\n      inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n    } \r\n    else {\r\n      inputElement.setCustomValidity(\"\");\r\n    }\r\n\r\n    if (!inputElement.validity.valid) {\r\n      showInputError(formElement, inputElement, inputElement.validationMessage, validationConfig);\r\n    } \r\n    else {\r\n      hideInputError(formElement, inputElement, validationConfig);\r\n    }\r\n  };\r\n  \r\n  const setEventListeners = (formElement, validationConfig) => {\r\n    const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n    inputList.forEach((inputElement) => {\r\n      inputElement.addEventListener('input', () => {\r\n        isValid(formElement, inputElement, validationConfig);\r\n        toggleButtonState(inputList, buttonElement, validationConfig);\r\n      });\r\n    });\r\n  };\r\n  \r\n  function enableValidation(validationConfig) {\r\n    const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n    formList.forEach((formElement) => {\r\n      setEventListeners(formElement, validationConfig);\r\n    });\r\n  };\r\n\r\n  function clearValidation(formElement, validationConfig) {\r\n    const inputs = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n    const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n\r\n    inputs.forEach(input => hideInputError(formElement, input, validationConfig));\r\n    toggleButtonState(inputs, buttonElement, validationConfig);\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n    return inputList.some(inputElement => !inputElement.validity.valid);\r\n}\r\n\r\nfunction toggleButtonState(inputList, buttonElement, validationConfig) {\r\n    if (hasInvalidInput(inputList)) {\r\n        buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    } else {\r\n        buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    }\r\n}\r\n  \r\n  export {enableValidation, clearValidation};","const validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n};\r\n\r\nexport default validationConfig;","import {createCard, likeCard} from \"./card.js\";\r\nimport {closeModal, openModal} from \"./modal.js\";\r\nimport {enableValidation, clearValidation} from \"./validation.js\";\r\nimport validationConfig from \"./config/validationConfig\";\r\nimport {getInitialCards, getUserProfile, updateProfile, updateAvatar, uploadCard} from \"./api.js\";\r\n\r\n// Выводим карточки на страницу\r\nconst placesList = document.querySelector(\".places__list\");\r\n\r\nfunction renderCards(res, ownerId) {\r\n    res.forEach(card => {\r\n        placesList.append(createCard(card, ownerId, likeCard, openImagePopup, deleteCard));\r\n    });\r\n}\r\n\r\nenableValidation(validationConfig);\r\n// Закрытие попапа\r\nconst popups = document.querySelectorAll('.popup')\r\n\r\npopups.forEach((popup) => {\r\n    popup.addEventListener('mousedown', (evt) => {\r\n        if (evt.target.classList.contains('popup_is-opened')) {\r\n            closeModal(popup)\r\n        }\r\n        if (evt.target.classList.contains('popup__close')) {\r\n            closeModal(popup)\r\n        }\r\n    })\r\n});\r\n\r\n\r\n// Редактирование профиля\r\nconst profileForm = document.forms['edit-profile'];\r\nconst nameInput = profileForm.elements['name'];\r\nconst jobInput = profileForm.elements['description'];\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileCloseButton = document.querySelector('.profile__edit-button');\r\nconst popupEditProfile = document.querySelector('.popup_type_edit');\r\n\r\nprofileCloseButton.addEventListener('click', () => {\r\n    fillEditProfilePopup();\r\n    openModal(popupEditProfile);\r\n    clearValidation(profileForm, validationConfig);\r\n});\r\n\r\nfunction fillEditProfilePopup() {\r\n  nameInput.value = profileTitle.textContent;\r\n  jobInput.value = profileDescription.textContent;\r\n}\r\n\r\nprofileForm.addEventListener('submit', (evt) => handleProfileFormSubmit(evt, nameInput.value, jobInput.value));\r\n\r\nfunction handleProfileFormSubmit(evt, name, description) {\r\n    evt.preventDefault();\r\n    evt.submitter.textContent = 'Сохранение...';\r\n    updateProfile(name, description)\r\n    .then((data) => {\r\n        renderProfile(data);\r\n        closeModal(popupEditProfile);\r\n    })\r\n    .catch(error => console.log(error))\r\n    .finally(() => {\r\n        evt.submitter.textContent = 'Сохранить';\r\n    });    \r\n}\r\n\r\nfunction renderProfile(res) {\r\n    profileTitle.textContent = res.name;\r\n    profileDescription.textContent = res.about.replace(/[^а-яА-ЯёЁa-zA-Z \\-]+/g, '');\r\n    //profileImage.style.backgroundImage = `url(${res.avatar})`;\r\n}\r\n\r\n// Загружаем данные с сервера\r\nPromise.all([getUserProfile(), getInitialCards()])\r\n    .then(data => {\r\n        renderProfile(data[0]);\r\n        renderCards(data[1], data[0]._id);\r\n    })\r\n    .catch(error => console.log(error));\r\n\r\n// Добавление новой карточки\r\nconst formAddNewCard = document.forms['new-place'];\r\nconst inputNewCardName = formAddNewCard.elements['place-name'];\r\nconst inputNewCardUrl = formAddNewCard.elements['link'];\r\nconst buttonAddNewCard = document.querySelector('.profile__add-button');\r\nconst popupAddNewCard = document.querySelector('.popup_type_new-card');\r\n\r\nbuttonAddNewCard.addEventListener('click', () => {\r\n  formAddNewCard.reset();\r\n  clearValidation(formAddNewCard, validationConfig);\r\n  openModal(popupAddNewCard);\r\n});\r\n\r\nformAddNewCard.addEventListener('submit', submitAddNewCard);\r\n\r\nfunction submitAddNewCard(evt) {\r\n    evt.preventDefault();\r\n    evt.submitter.textContent = 'Сохранение...';\r\n    const card = {\r\n        name: inputNewCardName.value,\r\n        link: inputNewCardUrl.value\r\n    }\r\n    uploadCard(card)\r\n        .then(data => {\r\n            placesList.prepend(createCard(data, data.owner._id, likeCard, openImagePopup, deleteCard));\r\n            closeModal(popupAddNewCard);\r\n        })\r\n        .catch(error => console.log(error))\r\n        .finally(() => {\r\n            evt.submitter.textContent = 'Создать';\r\n        });\r\n} \r\n\r\n//Отображение полноэкранной картинки\r\nconst popupCardImage = document.querySelector('.popup__image');\r\nconst popupCardCaption = document.querySelector('.popup__caption');\r\nconst popupCardWindow = document.querySelector('.popup_type_image');\r\n\r\nfunction openImagePopup(event) {\r\n    const target = event.target;\r\n    \r\n    fillCardImagePopup(target);\r\n    openModal(popupCardWindow);\r\n}\r\n\r\nfunction fillCardImagePopup(target) {\r\n    popupCardImage['src'] = target['src'];\r\n    popupCardImage['alt'] = target['alt'];\r\n    popupCardCaption.textContent = target.closest('.card').querySelector('.card__title').textContent;\r\n}"],"names":["config","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","card","ownerId","deleteFunction","likeFunction","popupFunction","newCard","cloneNode","cardImage","cardId","_id","src","link","alt","name","textContent","buttonDelete","owner","remove","addEventListener","likeButton","event","likes","length","some","like","classList","add","likeCard","target","closest","contains","fetch","method","then","deleteLike","data","toggle","catch","error","console","log","addLike","openModal","escapeListener","closeModal","removeEventListener","evt","key","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","setCustomValidity","clearValidation","inputs","Array","from","querySelectorAll","inputSelector","buttonElement","submitButtonSelector","forEach","input","toggleButtonState","inputList","validity","valid","hasInvalidInput","inactiveButtonClass","formSelector","placesList","patternMismatch","dataset","errorMessage","showInputError","validationMessage","isValid","setEventListeners","popup","profileForm","forms","nameInput","elements","jobInput","profileTitle","profileDescription","profileCloseButton","popupEditProfile","renderProfile","about","replace","value","description","preventDefault","submitter","body","updateProfile","finally","handleProfileFormSubmit","all","append","openImagePopup","deleteCard","formAddNewCard","inputNewCardName","inputNewCardUrl","buttonAddNewCard","popupAddNewCard","reset","uploadCard","prepend","popupCardImage","popupCardCaption","popupCardWindow"],"sourceRoot":""}